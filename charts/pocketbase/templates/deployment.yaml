apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pocketbase.fullname" . }}
  labels:
    app.kubernetes.io/name: pocketbase
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: pocketbase
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pocketbase
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: pocketbase
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["pocketbase", "serve", "--http=0.0.0.0:{{ .Values.service.port }}", "--dir", "{{ .Values.persistence.mountPath }}"]
          ports:
            - containerPort: {{ .Values.service.targetPort }}
              name: http
          env:
            - name: POCKETBASE_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ include "pocketbase.fullname" . }}-admin
                  key: email
            - name: POCKETBASE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "pocketbase.fullname" . }}-admin
                  key: password
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      restartPolicy: Always
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "pocketbase.fullname" . }}-pvc